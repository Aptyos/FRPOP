library(shiny); runApp('09_03_work_spatial/France/jyms.R')
# Chunk 1
summary(cars)
# Chunk 2
plot(cars)
# Chunk 1
library(shiny)
library(leaflet)
library(dplyr)
library(RColorBrewer)
xlib <- c("ggmap", "rgdal", "rgeos", "maptools", "dplyr", "tidyr", "sp", "tmap")
lapply(xlib, library, character.only = TRUE)
# Chunk 2
plot(cars)
library(shiny)
library(leaflet)
library(dplyr)
library(RColorBrewer)
xlib <- c("ggmap", "rgdal", "rgeos", "maptools", "dplyr", "tidyr", "sp", "tmap")
lapply(xlib, library, character.only = TRUE)
library("devtools", lib.loc="~/R/win-library/3.3")
?install_github
install_github("frPOp","Aptyos")
install_github("Aptyos/frPop")
install_github("Aptyos/ML4")
runApp('09_03_work_spatial/France/GEOFLA_2-2_DEPARTEMENT_SHP_LAMB93_FXX_2016-06-28/GEOFLA/1_DONNEES_LIVRAISON_2016-06-00235/GEOFLA_2-2_SHP_LAMB93_FR-ED161/jyms.R')
runApp('09_03_work_spatial/France/GEOFLA_2-2_DEPARTEMENT_SHP_LAMB93_FXX_2016-06-28/GEOFLA/1_DONNEES_LIVRAISON_2016-06-00235/GEOFLA_2-2_SHP_LAMB93_FR-ED161/frShinyPop')
runApp('09_03_work_spatial/France/GEOFLA_2-2_DEPARTEMENT_SHP_LAMB93_FXX_2016-06-28/GEOFLA/1_DONNEES_LIVRAISON_2016-06-00235/GEOFLA_2-2_SHP_LAMB93_FR-ED161/frShinyPop')
runApp('09_03_work_spatial/France/GEOFLA_2-2_DEPARTEMENT_SHP_LAMB93_FXX_2016-06-28/GEOFLA/1_DONNEES_LIVRAISON_2016-06-00235/GEOFLA_2-2_SHP_LAMB93_FR-ED161/frShinyPop')
runApp('09_03_work_spatial/France/GEOFLA_2-2_DEPARTEMENT_SHP_LAMB93_FXX_2016-06-28/GEOFLA/1_DONNEES_LIVRAISON_2016-06-00235/GEOFLA_2-2_SHP_LAMB93_FR-ED161/frShinyPop')
runApp('09_03_work_spatial/France/GEOFLA_2-2_DEPARTEMENT_SHP_LAMB93_FXX_2016-06-28/GEOFLA/1_DONNEES_LIVRAISON_2016-06-00235/GEOFLA_2-2_SHP_LAMB93_FR-ED161/frShinyPop')
runApp('09_03_work_spatial/France/GEOFLA_2-2_DEPARTEMENT_SHP_LAMB93_FXX_2016-06-28/GEOFLA/1_DONNEES_LIVRAISON_2016-06-00235/GEOFLA_2-2_SHP_LAMB93_FR-ED161/frShinyPop')
runApp('09_03_work_spatial/France/GEOFLA_2-2_DEPARTEMENT_SHP_LAMB93_FXX_2016-06-28/GEOFLA/1_DONNEES_LIVRAISON_2016-06-00235/GEOFLA_2-2_SHP_LAMB93_FR-ED161/frShinyPop')
runApp('09_03_work_spatial/France/GEOFLA_2-2_DEPARTEMENT_SHP_LAMB93_FXX_2016-06-28/GEOFLA/1_DONNEES_LIVRAISON_2016-06-00235/GEOFLA_2-2_SHP_LAMB93_FR-ED161/frShinyPop')
setwd("C:/Users/JYM/FRPOP")
setwd("C:/Users/JYM/FRPOP")
frGrowth <- read.csv("France1946-2016.csv","sep=";")
frGrowth <- read.csv("France1946-2016.csv",sep=";")
head(frGrowth )
?plot
plot(frGrowth$year, frGrowth$total, type = "l")
plot(frGrowth$year, frGrowth$total)
plot(frGrowth$year, frGrowth$total, xlab = "Year", ylab = "Population")
coefficients(fit)
fit1 <- lm(total ~ year, data=frGrowth)
coefficients(fit1)
setwd("C:/Users/JYM/FRPOP")
```{r }
frGrowth <- read.csv("France1946-2016.csv", sep=";")
fit <- lm(total ~ year, data=frGrowth)
p <- plot(frGrowth$year, frGrowth$total, xlab = "Year", ylab = "Population")
```
?abline
summary(fit)$coeff
fit <- lm(total ~ year, data=frGrowth)
abline(342243.9, col = "red", lwd = 2)
abline(fit, col = "red", lwd = 2)
?plot
library("ggplot2", lib.loc="~/R/win-library/3.3")
g <- ggplot(data = frGrowth, x= year, y=population)
g
g + abline(fit)
g
?ggplot
g <- ggplot(data = frGrowth) +geom_point( aes(year, y=population)) + geom_abline(fit)
g <- ggplot(data = frGrowth,aes(year, y=population) ) + geom_abline(fit)
g <- ggplot(data = frGrowth,aes(year,population) ) + geom_abline(fit)
g <- ggplot(data = frGrowth,aes(x=year,y=population) ) + geom_abline(fit)
g <- ggplot(data = frGrowth) + geom_point(aes(x=year,y=population) ) + geom_abline(fit)
g <- ggplot(data = frGrowth) + geom_point(aes(x=frGrowth$year,y=frGrowth$population) ) + geom_abline(fit)
g <- ggplot(data = frGrowth)
g <- g + geom_point(aes(x=year,y=population) )
g
g <- ggplot(data = frGrowth)
g <- g + geom_point(aes(x=year,y=total) )
g
g <- g + geom_abline(fit)
g <- ggplot(data = frGrowth)
g <- g + geom_point(aes(x=year,y=total/1000000) )
g
g <- g + geom_line(fit)
g <- g + abline(fit)
g
g <- ggplot(data = frGrowth)
g <- g + geom_point(aes(x=year,y=total/1000000) )
g <- g + abline(fit)
g
g <- ggplot(data = frGrowth)
g <- g + geom_point(aes(x=year,y=total/1000000) )
g <- g + geom_abline(slope = 342243.9, intercept = -624793790.0)
g
g <- g + geom_abline(slope = 342243.9, intercept = -624.793790)
g
g <- ggplot(data = frGrowth)
g <- g + geom_point(aes(x=year,y=total/1000000) )
g <- g + geom_abline(slope = 342243.9, intercept = -62.4793790)
g
fit$coefficients
g <- ggplot(data = frGrowth)
g <- g + geom_point(aes(x=year,y=total/1000000) )
g <- g + geom_abline(fit$coefficients,  slope = fit$coefficients[2], intercept =  fit$coefficients[1])
g
fit$coefficients[2]
fit$coefficients[1]
fit$coefficients[1,1]
fit$coefficients[2,1]
fit$coefficients[1,]
coefficients(fit)
g <- g + geom_abline(fit$coefficients,  slope = fit$coefficients[2], intercept =  fit$coefficients[1]/100)
g
g <- g + geom_abline(fit$coefficients,  slope = fit$coefficients[2], intercept =  fit$coefficients[1]*100)
g
plot(frGrowth$year, frGrowth$total)
plot(frGrowth$year, frGrowth$total/100)
plot(frGrowth$year, frGrowth$total/1000000)
abline(fit, col = "red", lwd = 2)
g <- ggplot(data = frGrowth)
g <- g + geom_point(aes(x=year,y=total/1000000) )
g <- g + geom_abline(fit$coefficients,  slope = fit$coefficients[2], intercept =  fit$coefficients[1]/1000000)
g
g + geom_smooth(method = "lm", colour = "black")
g <- ggplot(data = frGrowth, aes(x = year, y=total/1000000))
g <- g + geom_point(size = 5, colour = "blue", alpha=0.2)
g <- g + geom_smooth(method = "lm", colour = "black")
g
g <- ggplot(data = frGrowth, aes(x = year, y=total/1000000))
g <- g + geom_point(size = 3, colour = "blue", alpha=0.2)
g <- g + xlab("Year")
g <- g + ylab("Population(Million")
g <- g + geom_smooth(method = "lm", colour = "red")
g
predict(fit, newdata = as.data.frame(year=2020))
predict(fit, newdata = as.data.frame(year=2050))
predict(fit, newdata = 2020)
predict(fit, newdata = as.data.frame(year=c(2020)))
predict(fit, newdata = as.data.frame(year=c(2020)))
head(frGrowth)
predict(fit, newdata = data.frame(year=c(2020)))
rmarkdown::shiny_prerendered_clean('frPop2016.Rpres')
rmarkdown::shiny_prerendered_clean('frPop2016.Rpres')
?lm
?geom_smooth
rmarkdown::shiny_prerendered_clean('frPop2016.Rpres')
rmarkdown::shiny_prerendered_clean('frPop2016.Rpres')
rmarkdown::shiny_prerendered_clean('frPop2016.Rpres')
rmarkdown::shiny_prerendered_clean('frPop2016.Rpres')
rmarkdown::shiny_prerendered_clean('frPop2016.Rpres')
rmarkdown::shiny_prerendered_clean('frPop2016.Rpres')
rmarkdown::shiny_prerendered_clean('frPop2016.Rpres')
?xlab
rmarkdown::shiny_prerendered_clean('frPop2016.Rpres')
rmarkdown::shiny_prerendered_clean('frPop2016.Rpres')
